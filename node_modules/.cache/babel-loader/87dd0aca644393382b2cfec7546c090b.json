{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danish Adeel\\\\Desktop\\\\Weather App\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Titles from \"./titles\";\nimport Form from \"./form\";\nimport Weather from \"./weather\";\nimport \"./App.css\";\nconst Api_Key = \"295577675bccfbc8e62f0cc91c2d62a1\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      e.preventDefault();\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(Api_Key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        temperature: response.main.temp,\n        city: response.name,\n        country: response.sys.country,\n        humidity: response.main.humidity,\n        description: response.weather[0].description,\n        error: \"\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Danish Adeel\\Desktop\\Weather App\\my-app\\src\\App.js"],"names":["React","Titles","Form","Weather","Api_Key","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","target","elements","value","preventDefault","api_call","fetch","response","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KADwB;;AAAA,SAWhCM,UAXgC,GAWnB,MAAMC,CAAN,IAAW;AACtB,YAAMN,IAAI,GAAGM,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBR,IAAlB,CAAuBS,KAApC;AACA,YAAMR,OAAO,GAAGK,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBP,OAAlB,CAA0BQ,KAA1C;AACAH,MAAAA,CAAC,CAACI,cAAF;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAC0BZ,IAD1B,cACkCC,OADlC,oBACmDP,OADnD,EAA5B;AAGA,YAAMmB,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZnB,QAAAA,WAAW,EAAEe,QAAQ,CAACK,IAAT,CAAcC,IADf;AAEZnB,QAAAA,IAAI,EAAEa,QAAQ,CAACO,IAFH;AAGZnB,QAAAA,OAAO,EAAEY,QAAQ,CAACQ,GAAT,CAAapB,OAHV;AAIZC,QAAAA,QAAQ,EAAEW,QAAQ,CAACK,IAAT,CAAchB,QAJZ;AAKZC,QAAAA,WAAW,EAAEU,QAAQ,CAACS,OAAT,CAAiB,CAAjB,EAAoBnB,WALrB;AAMZC,QAAAA,KAAK,EAAE;AANK,OAAd;AAQD,KA5B+B;AAAA;;AA8BhCmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKlB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD1B;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJvB;AAKE,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAL1B;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,CADF;AAkBD;;AAjD+B;;AAmDlC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport Titles from \"./titles\";\nimport Form from \"./form\";\nimport Weather from \"./weather\";\n\nimport \"./App.css\";\n\nconst Api_Key = \"295577675bccfbc8e62f0cc91c2d62a1\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  };\n\n  //getWeather is a method we'll use to make the api call\n  getWeather = async e => {\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    e.preventDefault();\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n    );\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      temperature: response.main.temp,\n      city: response.name,\n      country: response.sys.country,\n      humidity: response.main.humidity,\n      description: response.weather[0].description,\n      error: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Titles />\n        </div>\n        <div>\n          <Form loadWeather={this.getWeather} />\n          <Weather\n            temperature={this.state.temperature}\n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}